/*
 * ====================================================================
 *  StreamEPS Platform
 * 
 *  (C) Copyright 2011.
 * 
 *  Distributed under the Modified BSD License.
 *  Copyright notice: The copyright for this software and a full listing
 *  of individual contributors are as shown in the packaged copyright.txt
 *  file.
 *  All rights reserved.
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are met:
 *  - Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 
 *  - Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation
 *  and/or other materials provided with the distribution.
 * 
 *  - Neither the name of the ORGANIZATION nor the names of its contributors may
 *  be used to endorse or promote products derived from this software without
 *  specific prior written permission.
 * 
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 *  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 *  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 *  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 *  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 *  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 *  OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
 *  USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 *  =============================================================================
 */
package org.streameps.store.file.component;

import java.io.Externalizable;
import java.io.Serializable;
import java.util.Map;
import org.streameps.store.file.IEPSFile;

/**
 * An interface for the EPS file component which serves as a component container
 * that is serialisable.
 * 
 * @author  Frank Appiah
 */
public interface IEPSFileComponent extends Serializable, Externalizable, Comparable<IEPSFileComponent> {

    /**
     * It sets the identifier for the file component.
     * This is automatically generated by the system and will recommend you set
     * the component name for any reference usage in your application design.
     * 
     * @param identifier A unique identifier.
     */
    public void setIdentifier(String identifier);

    /**
     * It return the generated identifier of the file component.
     * @return A unique identifier.
     */
    public String getIdentifier();

    /**
     * It sets the EPS files for this component.
     * @param epsFiles A map of EPS file.
     */
    public void setEPSFiles(Map<String, IEPSFile> epsFiles);

    /**
     * It returns the EPS files in this component.
     * @return A map of EPS file.
     */
    public Map<String, IEPSFile> getEPSFiles();

    /**
     * It sets the file extension for the saved file component.
     * @param fileExt The name for the file extension.
     */
    public void setFileExtension(String fileExt);

    /**
     * It returns the file extension for the saved file component.
     * @return The name for the file extension.
     */
    public String getFileExtension();

    /**
     * It adds the file to the file component.
     * @param epsFile The file to be added.
     */
    public void addEPSFile(IEPSFile epsFile);

    /**
     * It adds the file to the file component.
     * @param epsFile The file to be added.
     */
    public void addEPSFileIfAbsent(IEPSFile epsFile);

    /**
     * It removes the file from the file component.
     * @param epsFile The file to remove from the component.
     */
    public void removeEPSFile(IEPSFile epsFile);

    /**
     * It sets the persist location of the file system component.
     * @param locationPath The path to the location of the saved file system.
     */
    public void setSaveLocation(String locationPath);

    /**
     * It returns the persist location of the file system component.
     * @return The path to the location of the saved file system.
     */
    public String getSaveLocation();

    /**
     * It sets the file system component name.
     * @param name The name of the file system component.
     */
    public void setComponentName(String name);

    /**
     * It returns the file system component name.
     * @return The name of the file system component.
     */
    public String getComponentName();
}
